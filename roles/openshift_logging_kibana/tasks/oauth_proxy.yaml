---
# gen session_secret -- if necessary
# TODO: make idempotent
- name: Generate proxy session
  set_fact:
    session_secret: "{{ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' | random_word(200) }}"
  check_mode: no

# gen oauth_secret -- if necessary
# TODO: make idempotent
- name: Generate oauth client secret
  set_fact:
    oauth_secret: "{{ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' | random_word(64) }}"
  check_mode: no

# create oauth client
- name: Create oauth-client template
  template:
    src: oauth-client.j2
    dest: "{{ tempdir }}/templates/oauth-client.yml"
  vars:
    kibana_hostname: "{{ openshift_logging_kibana_hostname }}"
    secret: "{{ oauth_secret }}"

- name: Set kibana-proxy oauth-client
  oc_obj:
    state: present
    name: "kibana-proxy"
    namespace: "{{ openshift_kibana_namespace }}"
    kind: oauthclient
    files:
    - "{{ tempdir }}/templates/oauth-client.yml"
    delete_after: true

# create Kibana-proxy secret
- name: Set Kibana Proxy secret
  oc_secret:
    state: present
    name: "logging-kibana-proxy"
    namespace: "{{ openshift_kibana_namespace }}"
#    files:
#    - name: server-key
#      path: "{{ generated_certs_dir }}/kibana-internal.key"
#    - name: server-cert
#      path: "{{ generated_certs_dir }}/kibana-internal.crt"
#    - name: server-tls
#      path: "{{ generated_certs_dir }}/server-tls.json"
    contents:
    - path: oauth-secret
      data: "{{ oauth_secret }}"
    - path: session-secret
      data: "{{ session_secret }}"
    - path: server-key
      data: "{{ key_pairs | entry_from_named_pair('kibana_internal_key') | b64decode }}"
    - path: server-cert
      data: "{{ key_pairs | entry_from_named_pair('kibana_internal_cert') | b64decode }}"
    - path: server-tls
      data: "{{ key_pairs | entry_from_named_pair('server_tls') | b64decode }}"

# create Kibana DC
- name: Generate Kibana DC template
  template:
    src: kibana.j2
    dest: "{{ tempdir }}/templates/kibana-dc.yaml"
  vars:
    component: kibana
    logging_component: kibana
    deploy_name: "{{ kibana_name }}"
    image: "{{ openshift_logging_image_prefix }}logging-kibana:{{ openshift_logging_image_version }}"
    proxy_image: "{{ openshift_logging_image_prefix }}logging-auth-proxy:{{ openshift_logging_image_version }}"
    es_host: "{{ openshift_logging_kibana_es_host }}"
    es_port: "{{ openshift_logging_kibana_es_port }}"
    kibana_cpu_limit: "{{ openshift_logging_kibana_cpu_limit }}"
    kibana_memory_limit: "{{ openshift_logging_kibana_memory_limit }}"
    kibana_proxy_cpu_limit: "{{ openshift_logging_kibana_proxy_cpu_limit }}"
    kibana_proxy_memory_limit: "{{ openshift_logging_kibana_proxy_memory_limit }}"
    replicas: "{{ openshift_logging_kibana_replicas | default (0) }}"
    kibana_node_selector: "{{ openshift_logging_kibana_nodeselector | default({}) }}"

# update master configs?

- name: Delete temp directory
  file:
    name: "{{ tempdir }}"
    state: absent
  changed_when: False
