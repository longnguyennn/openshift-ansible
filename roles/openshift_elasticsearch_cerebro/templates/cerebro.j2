apiVersion: "v1"
kind: "DeploymentConfig"
metadata:
  name: "{{ deploy_name }}"
  labels:
    provider: openshift
    es-component: "{{ component }}"
    cluster-name: "{{ cluster_name }}"
    logging-infra: "{{ logging_component }}"
spec:
  replicas: {{ replicas | default(0) }}
  selector:
    provider: openshift
    es-component: "{{ component }}"
    cluster-name: "{{ cluster_name }}"
  strategy:
    rollingParams:
      intervalSeconds: 1
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      name: "{{ deploy_name }}"
      labels:
        logging-infra: "{{ logging_component }}"
        provider: openshift
        es-component: "{{ component }}"
        cluster-name: "{{ cluster_name }}"
    spec:
{% if node_selector is iterable and node_selector | length > 0 %}
      nodeSelector:
{% for key, value in node_selector.iteritems() %}
        {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
      containers:
        -
          name: "cerebro"
          image: {{ image }}
          imagePullPolicy: Always
{% if (memory_limit is defined and memory_limit is not none) or (cpu_limit is defined and cpu_limit is not none) %}
          resources:
            limits:
{% if cpu_limit is not none %}
              cpu: "{{ cpu_limit }}"
{% endif %}
{% if memory_limit is not none %}
              memory: "{{ memory_limit }}"
{% endif %}
{% endif %}
          env:
            - name: "ES_HOST"
              value: "{{ es_host }}"
            - name: "ES_PORT"
              value: "{{ es_port }}"
          volumeMounts:
          - name: config
            mountPath: /etc/cerebro
            readOnly: true
      volumes:
      - name: config
        configMap:
          name: cerebro-conf
