apiVersion: "v1"
kind: "DeploymentConfig"
metadata:
  name: "{{deploy_name}}"
  labels:
    provider: openshift
    component: "{{es_component}}"
    deployment: "{{deploy_name}}"
    cluster-name: "{{ es_cluster_name }}"
    logging-infra: "{{logging_component}}"
    es-node-role: "{{ es_role }}"
    elasticsearch-http: "{{ es_http_service }}"
spec:
  replicas: {{es_replicas|default(1)}}
  selector:
    provider: openshift
    component: "{{es_component}}"
    deployment: "{{deploy_name}}"
    logging-infra: "{{logging_component}}"
  strategy:
    type: Recreate
  template:
    metadata:
      name: "{{deploy_name}}"
      labels:
        logging-infra: "{{logging_component}}"
        provider: openshift
        component: "{{es_component}}"
        deployment: "{{deploy_name}}"
        cluster-name: "{{ es_cluster_name }}"
        es-node-role: "{{ es_role }}"
        elasticsearch-http: "{{ es_http_service }}"
    spec:
      terminationGracePeriod: 600
      serviceAccountName: {{ openshift_logging_elasticsearch_sa_name }}
      securityContext:
        supplementalGroups:
        - {{openshift_logging_elasticsearch_storage_group}}
{% if es_node_selector is iterable and es_node_selector | length > 0 %}
      nodeSelector:
{% for key, value in es_node_selector.iteritems() %}
        {{key}}: "{{value}}"
{% endfor %}
{% endif %}
      containers:
        -
          name: "elasticsearch"
          image: {{image}}
          imagePullPolicy: Always
          resources:
{% if limits is defined %}
            limits:
{% for key, value in limits.iteritems() %}
              {{key}}: "{{value}}"
{% endfor %}
{% endif %}
{% if requests is defined %}
            requests:
{% for key, value in requests.iteritems() %}
              {{key}}: "{{value}}"
{% endfor %}
{% endif %}
          livenessProbe:
            tcpSocket:
              port: 9300
            initialDelaySeconds: 480
            periodSeconds: 5
          readinessProbe:
{% if es_role == "master" %}
            tcpSocket:
              port: 9300
{% else %}
            exec:
              command:
              - "/usr/share/java/elasticsearch/probe/readiness.sh"
              initialDelaySeconds: 10
              timeoutSeconds: 30
              periodSeconds: 5
{% endif %}
          ports:
            -
              containerPort: 9200
              name: "restapi"
            -
              containerPort: 9300
              name: "cluster"
          env:
            -
              name: "DC_NAME"
              value: "{{deploy_name}}"
            -
              name: "NAMESPACE"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            -
              name: "NODE_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            -
              name: "SERVICE_DNS"
              value: "{{es_cluster_name}}-cluster"
            -
              name: "CLUSTER_NAME"
              value: "{{es_cluster_name}}"
            -
              name: "INSTANCE_RAM"
{% if limits is defined and limits.memory is defined %}
              value: "{{ limits.memory }}"
{% else %}
              value: "512m"
{% endif %}
            -
              name: "HEAP_DUMP_LOCATION"
              value: "/elasticsearch/persistent/heapdump.hprof"
            -
              name: "READINESS_PROBE_TIMEOUT"
              value: "30"
            -
              name: IS_MASTER
              value: "{{ node_master }}"
            -
              name: HAS_DATA
              value: "{{ node_data }}"
          volumeMounts:
            - name: elasticsearch
              mountPath: /etc/elasticsearch/secret
              readOnly: true
            - name: elasticsearch-config
              mountPath: /usr/share/java/elasticsearch/config
              readOnly: true
{% if storage_type == 'hostmount' %}
{% for item in hostmount_path %}
            - name: elasticsearch-storage-{{ loop.index0 }}
              mountPath: /elasticsearch/persistent/{{ loop.index0 }}
{% endfor %}
{% endif %}
      volumes:
        - name: elasticsearch
          secret:
            secretName: {{ es_cluster_name }}-certs
        - name: elasticsearch-config
          configMap:
            name: {{ es_configmap }}
{% if storage_type == 'pvc' %}
        - name: elasticsearch-storage
          persistentVolumeClaim:
            claimName: {{ openshift_logging_elasticsearch_pvc_name }}
{% elif storage_type == 'hostmount' %}
{% for item in hostmount_path %}
        - name: elasticsearch-storage-{{ loop.index0 }}
          hostPath:
            path: {{ item }}
{% endfor %}
{% else %}
        - name: elasticsearch-storage
          emptydir: {}
{% endif %}
