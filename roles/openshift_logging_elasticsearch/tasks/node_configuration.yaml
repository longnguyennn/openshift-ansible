---
- set_fact:
    __es_num_of_shards: "{{ _es_configmap | default({}) | walk('index.number_of_shards', '1') }}"
    __es_num_of_replicas: "{{ _es_configmap | default({}) | walk('index.number_of_replicas', '0') }}"

- assert:
    that:
    - "{{ openshift_logging_es_log_appenders | length > 0 }}"
    msg: "The openshift_logging_es_log_appenders '{{ openshift_logging_es_log_appenders }}' has an unrecognized option and only supports the following as a list: {{ __es_log_appenders | join(', ') }}"

- template:
    src: "{{ __base_file_dir }}/elasticsearch.yml.j2"
    dest: "{{ tempdir }}/elasticsearch.yml"
  vars:
    allow_cluster_reader: "{{ openshift_logging_elasticsearch_ops_allow_cluster_reader | lower | default('false') }}"
    es_number_of_shards: "{{ openshift_logging_es_number_of_shards | default(1) }}"
    es_number_of_replicas: "{{ openshift_logging_es_number_of_replicas | default(0) }}"
    es_kibana_index_mode: "{{ openshift_logging_elasticsearch_kibana_index_mode | default('unique') }}"
  changed_when: no

# create diff between current configmap files and our current files
- when: not openshift_logging_es5_techpreview
  block:
  - template:
      src: "{{ __base_file_dir }}/elasticsearch-logging.yml.j2"
      dest: "{{ tempdir }}/elasticsearch-logging.yml"
    vars:
      root_logger: "{{openshift_logging_es_log_appenders | join(', ')}}"
    changed_when: no

  - include_role:
      name: openshift_logging
      tasks_from: patch_configmap_files.yaml
    vars:
      configmap_name: "{{ es_cluster_name }}"
      configmap_namespace: "{{ openshift_logging_namespace }}"
      configmap_file_names:
      - current_file: "elasticsearch.yml"
        new_file: "{{ tempdir }}/elasticsearch.yml"
        protected_lines: ["number_of_shards", "number_of_replicas"]
      - current_file: "logging.yml"
        new_file: "{{ tempdir }}/elasticsearch-logging.yml"

  - slurp:
      src: "{{ tempdir }}/elasticsearch.yml"
    register: _patched_elasticsearch_config

  - copy:
      content: "{{ config_source | combine(override_config, recursive=True) | to_nice_yaml(indent=2) }}"
      dest: "{{ tempdir }}/elasticsearch.yml"
    vars:
      config_source: "{{ _patched_elasticsearch_config['content'] | b64decode | from_yaml }}"
      override_config: "{{ openshift_logging_es_config | default({}) | from_yaml }}"


  - name: Set ES configmap
    oc_configmap:
      state: present
      name: "{{ es_cluster_name }}"
      namespace: "{{ openshift_logging_elasticsearch_namespace }}"
      from_file:
        elasticsearch.yml: "{{ tempdir }}/elasticsearch.yml"
        logging.yml: "{{ tempdir }}/elasticsearch-logging.yml"
    register: es_config_creation
    notify: "restart elasticsearch"

- when: openshift_logging_es5_techpreview | bool
  block:
  - template:
      src: "{{ __base_file_dir }}/log4j2.properties.j2"
      dest: "{{ tempdir }}/log4j2.properties"
    vars:
      root_logger: "{{ openshift_logging_es_log_appenders | list }}"
    changed_when: no

  - include_role:
      name: openshift_logging
      tasks_from: patch_configmap_files.yaml
    vars:
      configmap_name: "{{ es_cluster_name }}"
      configmap_namespace: "{{ openshift_logging_namespace }}"
      configmap_file_names:
      - current_file: "elasticsearch.yml"
        new_file: "{{ tempdir }}/elasticsearch.yml"
      - current_file: "log4j2.properties"
        new_file: "{{ tempdir }}/log4j2.properties"

  - slurp:
      src: "{{ tempdir }}/elasticsearch.yml"
    register: _patched_elasticsearch_config

  - copy:
      content: "{{ config_source | combine(override_config, recursive=True) | to_nice_yaml(indent=2) }}"
      dest: "{{ tempdir }}/elasticsearch.yml"
    vars:
      config_source: "{{ _patched_elasticsearch_config['content'] | b64decode | from_yaml }}"
      override_config: "{{ openshift_logging_es_config | default({}) | from_yaml }}"


  - name: Set ES configmap
    oc_configmap:
      state: present
      name: "{{ es_cluster_name }}"
      namespace: "{{ openshift_logging_elasticsearch_namespace }}"
      from_file:
        elasticsearch.yml: "{{ tempdir }}/elasticsearch.yml"
        log4j2.properties: "{{ tempdir }}/log4j2.properties"
      kubeconfig: '{{ kubeconfig }}'
    register: es_config_creation
    notify: "restart elasticsearch"

- when: es_config_creation.changed | bool
  block:
  - set_fact:
      _restart_logging_components: "{{ _restart_logging_components | default([]) + [es_component] | unique }}"

  - shell: >
      {{ openshift_client_binary }} get deploymentconfig -l component="{{ es_component }}" -n "{{ openshift_logging_elasticsearch_namespace }}" -o name | cut -d'/' -f2
    register: _es_dcs

  - set_fact:
      _restart_logging_nodes: "{{ _restart_logging_nodes | default([]) + [_es_dcs.stdout] | unique }}"
    when: _es_dcs.stdout != ""
