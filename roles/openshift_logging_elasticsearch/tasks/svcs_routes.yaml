---
# allow passing in a tempdir
- name: Create temp directory for Elasticsearch services and routes
  command: mktemp -d /tmp/openshift-logging-ansible-svcs-XXXXXX
  register: mktemp
  changed_when: False

- name: set temp dir
  set_fact:
    tempdir: "{{ mktemp.stdout }}"

# services
- name: Create {{ openshift_logging_elasticsearch_clustername }}-cluster port 9300 service
  oc_service:
    state: present
    name: "{{ openshift_logging_elasticsearch_clustername }}-cluster"
    namespace: "{{ openshift_logging_elasticsearch_namespace }}"
    selector:
      cluster-name: "{{ openshift_logging_elasticsearch_clustername }}"
      es-node-role: "master"
    labels:
      logging-infra: 'support'
      cluster-name: "{{ openshift_logging_elasticsearch_clustername }}"
    clusterip: None
    ports:
    - port: 9300

- name: Set {{ openshift_logging_elasticsearch_clustername }} port 9200 service
  oc_service:
    state: present
    name: "{{ openshift_logging_elasticsearch_clustername }}"
    namespace: "{{ openshift_logging_elasticsearch_namespace }}"
    selector:
      cluster-name: "{{ openshift_logging_elasticsearch_clustername }}"
      elasticsearch-http: "true"
    labels:
      logging-infra: 'support'
      cluster-name: "{{ openshift_logging_elasticsearch_clustername }}"
    ports:
    - port: 9200
      targetPort: "restapi"

# External routes generation
- name: Retrieving the cert to use when generating secrets for the {{ openshift_logging_elasticsearch_clustername }} cluster
  slurp:
    src: "{{ generated_certs_dir }}/{{ item.file }}"
  register: key_pairs
  with_items:
  - { name: "ca_file", file: "ca.crt" }
  - { name: "es_key", file: "system.logging.es.key" }
  - { name: "es_cert", file: "system.logging.es.crt" }
  when: openshift_logging_elasticsearch_allow_external | bool

- set_fact:
    es_key: "{{ lookup('file', openshift_logging_elasticsearch_key) | b64encode }}"
  when:
  - openshift_logging_elasticsearch_key | trim | length > 0
  - openshift_logging_elasticsearch_allow_external | bool
  changed_when: false

- set_fact:
    es_cert: "{{ lookup('file', openshift_logging_elasticsearch_cert) | b64encode  }}"
  when:
  - openshift_logging_elasticsearch_cert | trim | length > 0
  - openshift_logging_elasticsearch_allow_external | bool
  changed_when: false

- set_fact:
    es_ca: "{{ lookup('file', openshift_logging_elasticsearch_ca_ext) | b64encode  }}"
  when:
  - openshift_logging_elasticsearch_ca_ext | trim | length > 0
  - openshift_logging_elasticsearch_allow_external | bool
  changed_when: false

- set_fact:
    es_ca: "{{ key_pairs | entry_from_named_pair('ca_file') }}"
  when:
  - es_ca is not defined
  - openshift_logging_elasticsearch_allow_external | bool
  changed_when: false

- name: Generating Elasticsearch route template for the cluster {{ openshift_logging_elasticsearch_clustername }}
  template:
    src: route_reencrypt.j2
    dest: "{{mktemp.stdout}}/{{ openshift_logging_elasticsearch_clustername }}-route.yaml"
  vars:
    obj_name: "{{ openshift_logging_elasticsearch_clustername }}"
    route_host: "{{ openshift_logging_elasticsearch_hostname }}"
    service_name: "{{ openshift_logging_elasticsearch_clustername }}"
    tls_key: "{{ es_key | default('') | b64decode }}"
    tls_cert: "{{ es_cert | default('') | b64decode }}"
    tls_ca_cert: "{{ es_ca | b64decode }}"
    tls_dest_ca_cert: "{{ key_pairs | entry_from_named_pair('ca_file') | b64decode }}"
    edge_term_policy: "{{ openshift_logging_elasticsearch_edge_term_policy | default('') }}"
    labels:
      component: support
      logging-infra: support
      provider: openshift
      cluster-name: "{{ openshift_logging_elasticsearch_clustername }}"
  changed_when: no
  when: openshift_logging_elasticsearch_allow_external | bool

# This currently has an issue if the host name changes
- name: Setting Elasticsearch route for the cluster {{ openshift_logging_elasticsearch_clustername }}
  oc_obj:
    state: present
    name: "{{ openshift_logging_elasticsearch_clustername }}"
    namespace: "{{ openshift_logging_elasticsearch_namespace }}"
    kind: route
    files:
    - "{{ tempdir }}/{{ openshift_logging_elasticsearch_clustername }}-route.yaml"
  when: openshift_logging_elasticsearch_allow_external | bool

- name: Delete temp directory
  file:
    name: "{{ tempdir }}"
    state: absent
  changed_when: False
