---
- fail:
    msg: "Invalid node role '{{ es_role }}' provide, one of {{ __allowed_es_types }} is allowed"
  when: not es_role in __allowed_es_types

- include: determine_version.yaml

# allow passing in a tempdir
- name: Create temp directory for doing work in for role {{ es_role }}
  command: mktemp -d /tmp/openshift-logging-ansible-XXXXXX
  register: mktemp
  changed_when: False

- name: set temp dir
  set_fact:
    tempdir: "{{ mktemp.stdout }}"

- name: set legacy component
  set_fact:
    es_component: "{{ openshift_logging_elasticsearch_clustername  | regex_replace('^logging-','') }}"

# This may not be necessary in this role
- name: Create templates subdirectory
  file:
    state: directory
    path: "{{ tempdir }}/templates"
    mode: 0755
  changed_when: False

# we want to make sure we have all the necessary components here

- name: Creating ES storage template
  template:
    src: pvc.j2
    dest: "{{ tempdir }}/templates/logging-es-pvc.yml"
  vars:
    obj_name: "{{ openshift_logging_elasticsearch_pvc_name }}"
    size: "{{ openshift_logging_elasticsearch_pvc_size }}"
    access_modes: "{{ openshift_logging_elasticsearch_pvc_access_modes | list }}"
    pv_selector: "{{ openshift_logging_elasticsearch_pvc_pv_selector }}"
  when:
  - node_storage_type == "pvc"
  - not openshift_logging_elasticsearch_pvc_dynamic

- name: Check to see if PVC already exists
  oc_obj:
    state: list
    kind: pvc
    name: "{{ openshift_logging_elasticsearch_pvc_name }}"
    namespace: "{{ openshift_logging_elasticsearch_namespace }}"
  register: logging_elasticsearch_pvc

# logging_elasticsearch_pvc.results.results | length > 0 returns a false positive
# so we check for the presence of 'stderr' to determine if the obj exists or not
# the RC for existing and not existing is both 0
- when:
    - logging_elasticsearch_pvc.results.stderr is defined
    - node_storage_type == "pvc"
  block:
    # storageclasses are used by default but if static then disable
    # storageclasses with the storageClassName set to "" in pvc.j2
    - name: Creating ES storage template - static
      template:
        src: pvc.j2
        dest: "{{ tempdir }}/templates/logging-es-pvc.yml"
      vars:
        obj_name: "{{ openshift_logging_elasticsearch_pvc_name }}"
        size: "{{ openshift_logging_elasticsearch_pvc_size }}"
        access_modes: "{{ openshift_logging_elasticsearch_pvc_access_modes | list }}"
        pv_selector: "{{ openshift_logging_elasticsearch_pvc_pv_selector }}"
        storage_class_name: "{{ openshift_logging_elasticsearch_pvc_storage_class_name | default('', true) }}"
      when:
        - not openshift_logging_elasticsearch_pvc_dynamic | bool

    # Storageclasses are used by default if configured
    - name: Creating ES storage template - dynamic
      template:
        src: pvc.j2
        dest: "{{ tempdir }}/templates/logging-es-pvc.yml"
      vars:
        obj_name: "{{ openshift_logging_elasticsearch_pvc_name }}"
        size: "{{ openshift_logging_elasticsearch_pvc_size }}"
        access_modes: "{{ openshift_logging_elasticsearch_pvc_access_modes | list }}"
        pv_selector: "{{ openshift_logging_elasticsearch_pvc_pv_selector }}"
      when:
        - openshift_logging_elasticsearch_pvc_dynamic | bool

- name: Set ES data node storage
  oc_obj:
    state: present
    kind: pvc
    name: "{{ openshift_logging_elasticsearch_pvc_name }}"
    namespace: "{{ openshift_logging_elasticsearch_namespace }}"
    files:
      - "{{ tempdir }}/templates/logging-es-pvc.yml"
    delete_after: true
  when:
  - node_storage_type == "pvc"

- name: Set deployment name
  set_fact:
    es_deploy_name: "{{ openshift_logging_elasticsearch_deployment_name }}"

# Setup all configmaps and secrets
- include: "{{ role_path }}/tasks/node_configuration.yaml"
  vars:
    node_configmap: "{{ es_deploy_name }}"
    storage_type: "{{ node_storage_type }}"

# DC
- name: Set ES dc templates for role {{ es_role }}
  template:
    src: es.j2
    dest: "{{ tempdir }}/templates/logging-es-dc.yml"
  vars:
    es_configmap: "{{ es_deploy_name }}"
    es_cluster_name: "{{ openshift_logging_elasticsearch_clustername }}"
    # TODO: add ability to add arbitrary label to ES deployments,
    # remove mandatory logging_component
    # TODO: component below needs to be changed
    component: "{{ openshift_logging_elasticsearch_clustername }}"
    es_component: "{{ es_component }}"
    deploy_name: "{{ es_deploy_name }}"
    storage_type: "{{ node_storage_type | default(emptydir) }}"
    image: "{{ openshift_logging_elasticsearch_image_prefix }}logging-elasticsearch:{{ openshift_logging_elasticsearch_image_version }}"
    proxy_image: "{{ openshift_logging_elasticsearch_proxy_image_prefix }}oauth-proxy:{{ openshift_logging_elasticsearch_proxy_image_version }}"
  changed_when: false

- name: Set ES dc for role {{ es_role }}
  oc_obj:
    state: present
    name: "{{ es_deploy_name }}"
    namespace: "{{ openshift_logging_elasticsearch_namespace }}"
    kind: dc
    files:
      - "{{ tempdir }}/templates/logging-es-dc.yml"
    delete_after: true

# scale up
- name: Start Elasticsearch for role {{ es_role }}
  oc_scale:
    kind: dc
    name: "{{ es_deploy_name }}"
    namespace: "{{ openshift_logging_elasticsearch_namespace }}"
    replicas: "{{ replicas | default(1) }}"

## Placeholder for migration when necessary ##

- name: Delete temp directory
  file:
    name: "{{ tempdir }}"
    state: absent
  changed_when: False
