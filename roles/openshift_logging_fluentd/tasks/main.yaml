---
- fail:
    msg: Only one Fluentd nodeselector key pair should be provided
  when: "{{ openshift_logging_fluentd_nodeselector.keys() | count }} > 1"

- name: Create temp directory for doing work in
  command: mktemp -d /tmp/openshift-logging-ansible-XXXXXX
  register: mktemp
  changed_when: False
  check_mode: no

- name: Copy the admin client config(s)
  command: >
    cp {{ openshift_master_config_dir }}/admin.kubeconfig {{ mktemp.stdout }}/admin.kubeconfig
  changed_when: False
  check_mode: no

# we want to make sure we have all the necessary components here

# create service account
- name: Create Fluentd service account
  oc_serviceaccount:
    state: present
    kubeconfig: {{ mktemp.stdout }}/admin.kubeconfig
    name: aggregated-logging-fluentd
    namespace: {{ openshift_logging_namespace }}
    image_pull_secrets: {{ openshift_logging_pull_secrets | default(None) }}

# set service account scc
- name: Check Fluentd privileged permissions
  command: >
    {{ openshift.common.client_binary }} --config={{ mktemp.stdout }}/admin.kubeconfig
    get scc/privileged -o jsonpath='{.users}'
  register: privileged_scc_output
  check_mode: no
  changed_when: no

- name: Set privileged permissions for Fluentd
  command: >
    {{ openshift.common.admin_binary}} --config={{ mktemp.stdout }}/admin.kubeconfig policy
    add-scc-to-user privileged system:serviceaccount:{{openshift_logging_namespace}}:aggregated-logging-fluentd
  register: fluentd_scc
  failed_when:
  - fluentd_scc.rc == 1
  - 'exists' not in fluentd_scc.stderr
  check_mode: no
  when: privileged_scc_output.stdout.find("system:serviceaccount:{{openshift_logging_namespace}}:aggregated-logging-fluentd") == -1

# set service account permissions
- name: Check Fluentd cluster-reader permissions
  command: >
    {{ openshift.common.client_binary }} --config={{ mktemp.stdout }}/admin.kubeconfig
    get clusterrolebinding/cluster-readers -o jsonpath='{.userNames}'
  register: cluster_readers_output
  check_mode: no
  changed_when: no

- name: Set cluster-reader permissions for Fluentd
  command: >
    {{ openshift.common.admin_binary}} --config={{ mktemp.stdout }}/admin.kubeconfig policy
    add-cluster-role-to-user cluster-reader system:serviceaccount:{{openshift_logging_namespace}}:aggregated-logging-fluentd
  register: fluentd_cluster_reader
  failed_when:
  - fluentd_cluster_reader.rc == 1
  - 'exists' not in fluentd_cluster_reader.stderr
  check_mode: no
  when: cluster_readers_output.stdout.find("system:serviceaccount:{{openshift_logging_namespace}}:aggregated-logging-fluentd") == -1

# create Fluentd daemonset


- name: Delete temp directory
  file:
    name: "{{ mktemp.stdout }}"
    state: absent
  changed_when: False
  check_mode: no
